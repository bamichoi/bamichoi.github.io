I"Y<h1 id="1-변수의-기초">1. 변수의 기초</h1>

<h2 id="variable-변수">Variable 변수</h2>

<p>Variable 변수 : 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름.
               프로그래밍 언어에서 값을 저장하고 참조하는, 값의 위치를 가리키는 상징적인 이름.
               프로그래밍 언어의 컴파일러 또는 인터프리터에 의해 값이 저장된 메모리 공간의 주소로 치환되어 실행된다.
               개발자의 직접적인 메모리 주소로의 접근없이 변수를 통해 안전하게 접근 가능하다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">20</span><span class="p">;</span>

<span class="c1">// result는 변수명, 30(10+20)은 변수값</span>
</code></pre></div></div>

<p>Assignment 할당 : 변수에 값을 저장하는 것.</p>

<p>Reference 참조 : 변수에 저장된 값을 읽어들이는 것.</p>

<p>변수명은 변수에 저장된 값의 의미를 파악할 수 있는 이름이어야 한다.</p>

<h2 id="identifier-식별자">Identifier 식별자</h2>

<p>Identifier 식별자 : 어떤 값을 구별해서 식별할 수 있는 고유한 이름. 
메모리 상에 존재하는 어떤 값을 식별할 수 있는 이름은 모두 식별자다. 변수, 함수, 클래스 등의 모든 이름이 식별자다.
예를 들어 변수명(식별자)은 변수값이 아니라 변수값이 저장된 메모리 주소를 기억하고 있다. 
식별자로 값을 구별해서 식별한다는 것은 식별자가 기억하고 있는 메모리 주소를 통해 메모리에 저장된 값에 접근한다는 의미이다.
즉, 식별자는 메모리 주소에 붙인 이름이다.</p>

<p>식별자는 네이밍규칙을 준수해야하며, Declation선언에 의해 자바스크립트 엔진에 식별자의 존재를 알린다.</p>

:ET